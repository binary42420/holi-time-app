{
    "checksum": "71da4f62747de6e001f8eccf107a07d78cd67c5066ebb9fd837fed4029a03ecb",
    "data": {
    "id": "7457bc54-5c24-4f0d-b631-3f0da0fd2e6d",
    "createdAt": 1753818023047,
    "updatedAt": 1753818832638,
    "title": "Prisma Shift Status Error Fix",
    "messages": [
        {
            "id": "ba5b5af8-448a-4a0d-9500-2b77acc9946d",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "prisma:error  Invalid `prisma.shift.update()` invocation:    {    where: {      id: \"cmdnvamoh005zm0ehxbrb4ass\"    },    data: {      status: \"COMPLETED\"              ~~~~~~~~~~~    }  }    Invalid value for argument `status`. Expected ShiftStatus.  Error finalizing timesheet: PrismaClientValidationError:  Invalid `prisma.shift.update()` invocation:    {    where: {      id: \"cmdnvamoh005zm0ehxbrb4ass\"    },    data: {      status: \"COMPLETED\"              ~~~~~~~~~~~    }  }    Invalid value for argument `status`. Expected ShiftStatus.      at An (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:114:7526)      at _n.handleRequestError (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:121:7392)      at _n.handleAndLogRequestError (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:121:7057)      at _n.request (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:121:6741)      at async l (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:130:9355)      at async POST (webpack-internal:///(rsc)/./src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts:107:13)      at async C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\compiled\\next-server\\app-route.runtime.dev.js:6:57228      at async eT.execute (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\compiled\\next-server\\app-route.runtime.dev.js:6:46851)      at async eT.handle (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\compiled\\next-server\\app-route.runtime.dev.js:6:58760)      at async doRender (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1366:42)      at async cacheEntry.responseCache.get.routeKind (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1576:40)      at async DevServer.renderToResponseWithComponentsImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1496:28)      at async DevServer.renderPageComponent (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1924:24)      at async DevServer.renderToResponseImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1962:32)      at async DevServer.pipeImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:922:25)      at async NextNodeServer.handleCatchallRenderRequest (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\next-server.js:272:17)      at async DevServer.handleRequestImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:818:17)      at async C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\dev\\next-dev-server.js:339:20      at async Span.traceAsyncFn (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\trace\\trace.js:154:20)      at async DevServer.handleRequest (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\dev\\next-dev-server.js:336:24)      at async invokeRender (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\router-server.js:179:21)      at async handleRequest (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\router-server.js:359:24)      at async requestHandlerImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\router-server.js:383:13)      at async Server.requestListener (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\start-server.js:141:13) {    clientVersion: '5.17.0'  }   POST /api/shifts/cmdnvamoh005zm0ehxbrb4ass/finalize-timesheet-simple 500 in 2724ms   the statuses are Pending, Active, Completed, InProgress, and Cancelled"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "src\\components\\timesheet-details.tsx",
                    "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "\"use client\"\n\nimport React from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Label } from '@/components/ui/label'\nimport { useToast } from \"@/hooks/use-toast\"\nimport { \n  CheckCircle, \n  XCircle, \n  Clock, \n  User, \n  Building2, \n  Download,\n  Shield,\n  AlertCircle\n} from \"lucide-react\"\nimport { format } from \"date-fns\"\nimport type { TimesheetDetails as TimesheetDetailsType } from \"@/lib/types\"\nimport { formatTimeTo12Hour } from \"@/lib/time-utils\"\n\ninterface TimesheetDetailsProps {\n  timesheet: TimesheetDetailsType;\n}\n\ninterface PdfDownloadError extends Error {\n  status?: number\n}\n\nexport function TimesheetDetails({ timesheet }: TimesheetDetailsProps) {\n  const { toast } = useToast()\n\n  const calculateHours = (clockIn?: Date | string, clockOut?: Date | string) => {\n    if (!clockIn || !clockOut) return 0\n    const start = new Date(clockIn)\n    const end = new Date(clockOut)\n    return (end.getTime() - start.getTime()) / (1000 * 60 * 60)\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'COMPLETED':\n        return <Badge className=\"bg-green-100 text-green-800\"><CheckCircle className=\"h-3 w-3 mr-1\" />Completed</Badge>\n      case 'REJECTED':\n        return <Badge variant=\"destructive\"><XCircle className=\"h-3 w-3 mr-1\" />Rejected</Badge>\n      case 'PENDING_COMPANY_APPROVAL':\n        return <Badge variant=\"outline\"><Clock className=\"h-3 w-3 mr-1\" />Pending Company Approval</Badge>\n      case 'PENDING_MANAGER_APPROVAL':\n        return <Badge variant=\"outline\"><Shield className=\"h-3 w-3 mr-1\" />Pending Manager Approval</Badge>\n      default:\n        return <Badge variant=\"outline\">{status}</Badge>\n    }\n  }\n\n  const downloadPDF = async (): Promise<void> => {\n    try {\n      const response = await fetch(`/api/timesheets/${timesheet.id}/pdf`)\n      if (!response.ok) {\n        const error: PdfDownloadError = new Error('Failed to generate PDF')\n        error.status = response.status\n        throw error\n      }\n      \n      const blob = await response.blob()\n      const url = window.URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `timesheet-${timesheet.shift.job.company.name}-${format(new Date(timesheet.shift.date), 'yyyy-MM-dd')}.pdf`\n      document.body.appendChild(a)\n      a.click()\n      window.URL.revokeObjectURL(url)\n      document.body.removeChild(a)\n    } catch (error) {\n      console.error('Error downloading PDF:', error)\n      toast({\n        title: \"Error downloading PDF\",\n        description: \"There was a problem generating or downloading the timesheet PDF. Please try again.\",\n        variant: \"destructive\"\n      })\n    }\n  }\n\n  const crewChief = timesheet.shift.assignedPersonnel.find(p => p.roleCode === 'CC');\n\n  const maxEntries = Math.max(\n    ...timesheet.shift.assignedPersonnel.map(p => p.timeEntries.length),\n    1\n  )\n\n  const formatTime = (date: Date | string | null | undefined) => {\n      if(!date) return '-'\n      try {\n        const dateObj = new Date(date);\n        const hours = dateObj.getHours();\n        const minutes = dateObj.getMinutes();\n\n        const ampm = hours >= 12 ? 'PM' : 'AM';\n        const formattedHour = hours % 12 || 12;\n\n        if (minutes === 0) {\n          return `${formattedHour}:00 ${ampm}`;\n        }\n\n        const formattedMinute = minutes < 10 ? `0${minutes}` : minutes;\n        return `${formattedHour}:${formattedMinute} ${ampm}`;\n      } catch (error) {\n        return '-';\n      }\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4\">\n        <div>\n          <h1 className=\"text-2xl sm:text-3xl font-bold tracking-tight\">Timesheet Details</h1>\n          <p className=\"text-muted-foreground\">\n            View timesheet information and approval status\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2 self-end sm:self-center\">\n          {getStatusBadge(timesheet.status)}\n          <Button variant=\"outline\" onClick={downloadPDF}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            PDF\n          </Button>\n        </div>\n      </div>\n\n      {/* Rejection Notice */}\n      {timesheet.status === 'rejected' && timesheet.rejectionReason && (\n        <Card className=\"border-red-200 bg-red-50\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-red-800\">\n              <AlertCircle className=\"h-5 w-5\" />\n              Timesheet Rejected\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-red-700\">{timesheet.rejectionReason}</p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Approval Status */}\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        {/* Company Approval */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <User className=\"h-5 w-5\" />\n              Company Approval\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {timesheet.companyApprovedAt ? (\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"font-medium text-green-700\">Approved</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">\n                  {format(new Date(timesheet.companyApprovedAt), 'M/d/yyyy')} at {formatTime(timesheet.companyApprovedAt)}\n                </p>\n                {timesheet.companySignature && (\n                  <div className=\"mt-2\">\n                    <p className=\"text-xs text-muted-foreground mb-1\">Company Signature:</p>\n                    <img\n                      src={timesheet.companySignature}\n                      alt=\"Company Signature\"\n                      className=\"h-12 border rounded\"\n                    />\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"h-4 w-4 text-yellow-600\" />\n                <span className=\"text-yellow-700\">Pending</span>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Manager Approval */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Shield className=\"h-5 w-5\" />\n              Manager Approval\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {timesheet.managerApprovedAt ? (\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                  <span className=\"font-medium text-green-700\">Approved</span>\n                </div>\n                <p className=\"text-sm text-muted-foreground\">\n                  {format(new Date(timesheet.managerApprovedAt), 'M/d/yyyy')} at {formatTime(timesheet.managerApprovedAt)}\n                </p>\n              </div>\n            ) : (\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"h-4 w-4 text-yellow-600\" />\n                <span className=\"text-yellow-700\">Pending</span>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Shift Information */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building2 className=\"h-5 w-5\" />\n            Shift Information\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-4\">\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">Job</Label>\n              <p className=\"font-medium\">{timesheet.shift.job.name}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">Company</Label>\n              <p className=\"font-medium\">{timesheet.shift.job.company.name}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">Date</Label>\n              <p className=\"font-medium\">{format(new Date(timesheet.shift.date), 'M/d/yyyy')}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">Crew Chief</Label>\n              <p className=\"font-medium\">{crewChief?.user.name || 'N/A'}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">Time</Label>\n              <p className=\"font-medium\">{formatTime(timesheet.shift.startTime)} - {formatTime(timesheet.shift.endTime)}</p>\n            </div>\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">Location</Label>\n              <p className=\"font-medium\">{timesheet.shift.location || timesheet.shift.job.location}</p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Time Entries */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Clock className=\"h-5 w-5\" />\n            Worker Time Entries\n          </CardTitle>\n          <CardDescription>\n            Complete record of all worker time entries for this shift\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"overflow-x-auto\">\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"sticky left-0 bg-white\">Worker</TableHead>\n                <TableHead>Role</TableHead>\n                {Array.from({ length: maxEntries }, (_, i) => (\n                  <React.Fragment key={i}>\n                    <TableHead>Time In {i + 1}</TableHead>\n                    <TableHead>Time Out {i + 1}</TableHead>\n                  </React.Fragment>\n                ))}\n                <TableHead>Total Hours</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {timesheet.shift.assignedPersonnel.map((worker) => {\n                const totalHours = worker.timeEntries.reduce((sum, entry) =>\n                  sum + calculateHours(entry.clockIn, entry.clockOut), 0\n                );\n                \n                return (\n                  <TableRow key={worker.id}>\n                    <TableCell className=\"sticky left-0 bg-white\">\n                      <div className=\"flex items-center gap-3\">\n                        <Avatar className=\"h-14 w-14\">\n                          <AvatarImage src={worker.user.avatarUrl || undefined} />\n                          <AvatarFallback className=\"text-lg font-bold\">\n                            {worker.user.name?.split(' ').map((n: string) => n[0]).join('')}\n                          </AvatarFallback>\n                        </Avatar>\n                        <span className=\"font-medium truncate\">{worker.user.name}</span>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Badge variant=\"outline\">{worker.roleCode}</Badge>\n                    </TableCell>\n                    {Array.from({ length: maxEntries }, (_, i) => {\n                      const entry = worker.timeEntries[i];\n                      return (\n                        <React.Fragment key={i}>\n                          <TableCell>{entry ? formatTime(entry.clockIn) : '-'}</TableCell>\n                          <TableCell>{entry ? formatTime(entry.clockOut) : '-'}</TableCell>\n                        </React.Fragment>\n                      )\n                    })}\n                    <TableCell className=\"font-medium\">\n                      {totalHours.toFixed(2)} hrs\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"
                },
                "codebaseEnabled": false
            },
            "createdAt": 1753818023159,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "prisma:error  Invalid `prisma.shift.update()` invocation:    {    where: {      id: \"cmdnvamoh005zm0ehxbrb4ass\"    },    data: {      status: \"COMPLETED\"              ~~~~~~~~~~~    }  }    Invalid value for argument `status`. Expected ShiftStatus.  Error finalizing timesheet: PrismaClientValidationError:  Invalid `prisma.shift.update()` invocation:    {    where: {      id: \"cmdnvamoh005zm0ehxbrb4ass\"    },    data: {      status: \"COMPLETED\"              ~~~~~~~~~~~    }  }    Invalid value for argument `status`. Expected ShiftStatus.      at An (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:114:7526)      at _n.handleRequestError (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:121:7392)      at _n.handleAndLogRequestError (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:121:7057)      at _n.request (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:121:6741)      at async l (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\@prisma\\client\\runtime\\library.js:130:9355)      at async POST (webpack-internal:///(rsc)/./src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts:107:13)      at async C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\compiled\\next-server\\app-route.runtime.dev.js:6:57228      at async eT.execute (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\compiled\\next-server\\app-route.runtime.dev.js:6:46851)      at async eT.handle (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\compiled\\next-server\\app-route.runtime.dev.js:6:58760)      at async doRender (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1366:42)      at async cacheEntry.responseCache.get.routeKind (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1576:40)      at async DevServer.renderToResponseWithComponentsImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1496:28)      at async DevServer.renderPageComponent (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1924:24)      at async DevServer.renderToResponseImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:1962:32)      at async DevServer.pipeImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:922:25)      at async NextNodeServer.handleCatchallRenderRequest (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\next-server.js:272:17)      at async DevServer.handleRequestImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\base-server.js:818:17)      at async C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\dev\\next-dev-server.js:339:20      at async Span.traceAsyncFn (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\trace\\trace.js:154:20)      at async DevServer.handleRequest (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\dev\\next-dev-server.js:336:24)      at async invokeRender (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\router-server.js:179:21)      at async handleRequest (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\router-server.js:359:24)      at async requestHandlerImpl (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\router-server.js:383:13)      at async Server.requestListener (C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\node_modules\\next\\dist\\server\\lib\\start-server.js:141:13) {    clientVersion: '5.17.0'  }   POST /api/shifts/cmdnvamoh005zm0ehxbrb4ass/finalize-timesheet-simple 500 in 2724ms   the statuses are Pending, Active, Completed, InProgress, and Cancelled"
                            }
                        ]
                    }
                ]
            },
            "autoAppliedRules": [
                {
                    "name": "Repository Information Overview",
                    "description": "Repository Information Overview",
                    "uri": "zen-rules://repo/repo",
                    "content": "\n\n# Holitime App Information\n\n## Summary\nA Next.js application for time tracking and workforce management, named \"Holitime\". The app provides functionality for managing jobs, shifts, timesheets, and worker assignments with role-based access control.\n\n## Structure\n- **src/**: Main application code (components, hooks, features, app routes)\n- **prisma/**: Database schema and migrations using Prisma ORM\n- **public/**: Static assets and files\n- **tests/**: Test files for database, UI, and end-to-end testing\n- **scripts/**: Utility scripts for deployment, database operations, and maintenance\n\n## Language & Runtime\n**Language**: TypeScript/JavaScript\n**Version**: ES2017 target with Next.js 14\n**Build System**: Next.js build system\n**Package Manager**: npm\n\n## Dependencies\n**Main Dependencies**:\n- Next.js (14.2.30) - React framework\n- React (18.3.1) - UI library\n- Prisma (5.17.0) - ORM for PostgreSQL\n- NextAuth (4.24.7) - Authentication\n- TanStack Query (5.51.15) - Data fetching\n- Mantine (7.11.1) & Radix UI - UI components\n- Tailwind CSS (3.4.7) - Styling\n- Zod (3.23.8) - Schema validation\n- Zustand (4.5.4) - State management\n\n**Development Dependencies**:\n- TypeScript (5.5.4)\n- Jest (30.0.5) - Testing\n- ESLint (8.57.0) - Linting\n- Testing Library - Test utilities\n- Faker - Test data generation\n\n## Build & Installation\n```bash\n# Install dependencies\nnpm install\n\n# Development\nnpm run dev\n\n# Build for production\nnpm run build\n\n# Start production server\nnpm run start\n\n# Database operations\nnpm run migrate       # Development migrations\nnpm run migrate:prod  # Production migrations\nnpm run db:seed       # Seed database\nnpm run studio        # Prisma Studio UI\n```\n\n## Docker\n**Dockerfile**: Multi-stage build process\n**Base Image**: node:20-slim\n**Build Process**:\n1. Builder stage installs dependencies and builds the application\n2. Runtime stage copies only necessary files for production\n**Run Command**: `node server.js`\n\n## Testing\n**Framework**: Jest with Testing Library\n**Test Location**: `/tests` directory\n**Configuration**: jest.config.js and jest.setup.js\n**Test Types**:\n- Database tests: `npm run test:db`\n- UI functionality: `npm run test:ui`\n- End-to-end tests: `npm run test:e2e`\n- All tests: `npm run test:all`\n\n## Database\n**ORM**: Prisma\n**Database**: PostgreSQL\n**Schema**: Comprehensive data model for users, companies, jobs, shifts, timesheets\n**Models**: User, Company, Job, Shift, AssignedPersonnel, TimeEntry, Timesheet"
                }
            ]
        },
        {
            "id": "cead2ed8-3065-45ae-b889-79e751c95350",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "I can see the issue! The error indicates that you're trying to set a shift status to \"COMPLETED\" but the Prisma schema expects a `ShiftStatus` enum value. Based on your error message, the valid statuses are: Pending, Active, Completed, InProgress, and Cancelled.\n\nThe problem is that you're using \"COMPLETED\" (all caps) but the actual enum value is \"Completed\" (Pascal case).\n\nLet me find the API route that's causing this error and fix it."
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_011UErXmybJQWzkXckg8tSbd",
                    "title": "File search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01MkCroo99R7EkfpJGmUkAiM",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts",
                                "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\app\\api\\shifts\\[id]\\finalize-timesheet-simple\\route.ts"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Now I can see the issue! On line 107, the code is trying to set the shift status to 'COMPLETED' (all caps), but based on your error message, the correct enum value should be 'Completed' (Pascal case).\n\nLet me also check the Prisma schema to confirm the exact enum values:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01VVCrKcHSZK14Gcx2JkXLZN",
                    "title": "File search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_017hkEZyGGHSKj6S5eWVtWWp",
                    "title": "Fulltext search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01S3KbcWPzq3qQpgJ9maJGYD",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "prisma/schema.prisma",
                                "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\prisma\\schema.prisma"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Perfect! Now I can see that the `ShiftStatus` enum has `Completed` (Pascal case), not `COMPLETED` (all caps). Let me fix the API route:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_018349tG2NYe2yeqzKvDEXwn",
                    "statusText": "Change generated",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts",
                                "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\app\\api\\shifts\\[id]\\finalize-timesheet-simple\\route.ts"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "codeHunk",
                    "lineBasedDiff": "--- C:/Users/ryley/WebstormProjects/untitled/my-next-app/src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts\n+++ C:/Users/ryley/WebstormProjects/untitled/my-next-app/src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts\n@@ -101,10 +101,10 @@\n     }\n \n     // Update shift status to completed if not already\n-    if (shift.status !== 'COMPLETED' && shift.status !== 'Completed') {\n+    if (shift.status !== 'Completed') {\n       await prisma.shift.update({\n         where: { id: shiftId },\n-        data: { status: 'COMPLETED' }\n+        data: { status: 'Completed' }\n       });\n     }\n ",
                    "refToolCallId": "toolu_018349tG2NYe2yeqzKvDEXwn"
                },
                {
                    "type": "text",
                    "text": "Great! I've fixed the issue. The problem was that the code was trying to set the shift status to `'COMPLETED'` (all uppercase), but according to your Prisma schema, the correct enum value is `'Completed'` (Pascal case).\n\nThe changes I made:\n\n1. **Fixed the status comparison**: Changed from checking both `'COMPLETED'` and `'Completed'` to just checking `'Completed'`\n2. **Fixed the status assignment**: Changed from setting `'COMPLETED'` to setting `'Completed'`\n\nThis should resolve the Prisma validation error you were encountering. The API route will now use the correct enum value that matches your Prisma schema definition.\n\nYou can test this fix by trying to finalize a timesheet again. The error should no longer occur, and the shift status should be properly updated to \"Completed\"."
                },
                {
                    "type": "codePatch",
                    "diffs": [
                        {
                            "path": "src/app/api/shifts/[id]/finalize-timesheet-simple/route.ts",
                            "patch": "@@ -3136,40 +3136,8 @@\n  !==\n- 'COMPLETED' && shift.status !==\n  'Co\n@@ -3244,16 +3244,16 @@\n : 'C\n-OMPLETED\n+ompleted\n ' %7D%0A\n",
                            "isNew": false,
                            "isApplied": true
                        }
                    ]
                }
            ],
            "context": {
                "author": "Coding Agent",
                "operationId": "4e54c8aa-fb4a-438a-a781-8974d608d1a2"
            },
            "createdAt": 1753818146672,
            "isInternal": false
        },
        {
            "id": "e72df9cf-fcd9-45d0-990e-6764e5c7c4cb",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "Compiling /timesheets/[id]/approve ..."
                },
                {
                    "type": "text",
                    "text": " ⨯ ./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "Error:"
                },
                {
                    "type": "text",
                    "text": "  × Unexpected eof"
                },
                {
                    "type": "text",
                    "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                },
                {
                    "type": "text",
                    "text": " 146 │     </div>"
                },
                {
                    "type": "text",
                    "text": " 147 │   )"
                },
                {
                    "type": "text",
                    "text": " 148 │ }"
                },
                {
                    "type": "text",
                    "text": "     ╰────"
                },
                {
                    "type": "text",
                    "text": "Caused by:"
                },
                {
                    "type": "text",
                    "text": "    Syntax Error"
                },
                {
                    "type": "text",
                    "text": "Import trace for requested module:"
                },
                {
                    "type": "text",
                    "text": "./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                },
                {
                    "type": "text",
                    "text": " ⨯ ./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "Error:"
                },
                {
                    "type": "text",
                    "text": "  × Unexpected eof"
                },
                {
                    "type": "text",
                    "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                },
                {
                    "type": "text",
                    "text": " 146 │     </div>"
                },
                {
                    "type": "text",
                    "text": " 147 │   )"
                },
                {
                    "type": "text",
                    "text": " 148 │ }"
                },
                {
                    "type": "text",
                    "text": "     ╰────"
                },
                {
                    "type": "text",
                    "text": "Caused by:"
                },
                {
                    "type": "text",
                    "text": "    Syntax Error"
                },
                {
                    "type": "text",
                    "text": "Import trace for requested module:"
                },
                {
                    "type": "text",
                    "text": "./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                },
                {
                    "type": "text",
                    "text": " ⨯ ./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "Error:"
                },
                {
                    "type": "text",
                    "text": "  × Unexpected eof"
                },
                {
                    "type": "text",
                    "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                },
                {
                    "type": "text",
                    "text": " 146 │     </div>"
                },
                {
                    "type": "text",
                    "text": " 147 │   )"
                },
                {
                    "type": "text",
                    "text": " 148 │ }"
                },
                {
                    "type": "text",
                    "text": "     ╰────"
                },
                {
                    "type": "text",
                    "text": "Caused by:"
                },
                {
                    "type": "text",
                    "text": "    Syntax Error"
                },
                {
                    "type": "text",
                    "text": "Import trace for requested module:"
                },
                {
                    "type": "text",
                    "text": "./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                },
                {
                    "type": "text",
                    "text": " ⨯ ./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "Error:"
                },
                {
                    "type": "text",
                    "text": "  × Unexpected eof"
                },
                {
                    "type": "text",
                    "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                },
                {
                    "type": "text",
                    "text": " 146 │     </div>"
                },
                {
                    "type": "text",
                    "text": " 147 │   )"
                },
                {
                    "type": "text",
                    "text": " 148 │ }"
                },
                {
                    "type": "text",
                    "text": "     ╰────"
                },
                {
                    "type": "text",
                    "text": "Caused by:"
                },
                {
                    "type": "text",
                    "text": "    Syntax Error"
                },
                {
                    "type": "text",
                    "text": "Import trace for requested module:"
                },
                {
                    "type": "text",
                    "text": "./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                },
                {
                    "type": "text",
                    "text": " GET /api/shifts/cmdnvamoh005zm0ehxbrb4ass 500 in 16715ms"
                },
                {
                    "type": "text",
                    "text": " GET /api/users?page=1&pageSize=20&fetchAll=true 500 in 16728ms"
                },
                {
                    "type": "text",
                    "text": " GET /api/shifts?date=today 500 in 16279ms"
                },
                {
                    "type": "text",
                    "text": " GET /timesheets/cmdoxvjum000tiiz582jjvr66/approve 500 in 16746ms"
                },
                {
                    "type": "text",
                    "text": " ⨯ ./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "Error:"
                },
                {
                    "type": "text",
                    "text": "  × Unexpected eof"
                },
                {
                    "type": "text",
                    "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                },
                {
                    "type": "text",
                    "text": " 146 │     </div>"
                },
                {
                    "type": "text",
                    "text": " 147 │   )"
                },
                {
                    "type": "text",
                    "text": " 148 │ }"
                },
                {
                    "type": "text",
                    "text": "     ╰────"
                },
                {
                    "type": "text",
                    "text": "Caused by:"
                },
                {
                    "type": "text",
                    "text": "    Syntax Error"
                },
                {
                    "type": "text",
                    "text": "Import trace for requested module:"
                },
                {
                    "type": "text",
                    "text": "./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                },
                {
                    "type": "text",
                    "text": " ⨯ ./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "Error:"
                },
                {
                    "type": "text",
                    "text": "  × Unexpected eof"
                },
                {
                    "type": "text",
                    "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                },
                {
                    "type": "text",
                    "text": " 146 │     </div>"
                },
                {
                    "type": "text",
                    "text": " 147 │   )"
                },
                {
                    "type": "text",
                    "text": " 148 │ }"
                },
                {
                    "type": "text",
                    "text": "     ╰────"
                },
                {
                    "type": "text",
                    "text": "Caused by:"
                },
                {
                    "type": "text",
                    "text": "    Syntax Error"
                },
                {
                    "type": "text",
                    "text": "Import trace for requested module:"
                },
                {
                    "type": "text",
                    "text": "./src/components/timesheet-details.tsx"
                },
                {
                    "type": "text",
                    "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                },
                {
                    "type": "text",
                    "text": " GET /api/shifts?date=today 500 in 13299ms"
                },
                {
                    "type": "text",
                    "text": " GET /api/auth/session 500 in 9585ms"
                },
                {
                    "type": "text",
                    "text": " GET /api/auth/session 500 in 3425ms"
                },
                {
                    "type": "text",
                    "text": " GET /shifts/cmdnvamoh005zm0ehxbrb4ass 500 in 86ms"
                },
                {
                    "type": "text",
                    "text": "<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cach"
                },
                {
                    "type": "text",
                    "text": "e\\webpack\\client-development-fallback\\0.pack.gz_' -> 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cache\\webpack\\client-development-fallback\\0.pack.gz'               "
                },
                {
                    "type": "text",
                    "text": "<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cach"
                },
                {
                    "type": "text",
                    "text": "e\\webpack\\client-development-fallback\\0.pack.gz_' -> 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cache\\webpack\\client-development-fallback\\0.pack.gz'               "
                },
                {
                    "type": "text",
                    "text": " POST /api/auth/_log 500 in 90ms"
                },
                {
                    "type": "text",
                    "text": " POST /api/auth/_log 500 in 89ms"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "src\\app\\api\\shifts\\[id]\\finalize-timesheet-simple\\route.ts",
                    "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\app\\api\\shifts\\[id]\\finalize-timesheet-simple\\route.ts",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "import { NextRequest, NextResponse } from 'next/server';\nimport { prisma } from '@/lib/prisma';\nimport { getServerSession } from 'next-auth/next';\nimport { authOptions } from '@/lib/auth-config';\nimport { TIMESHEET_STATUS } from '@/constants';\n\nasync function getCurrentUser(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    return session?.user || null;\n  } catch (error) {\n    console.error('Error getting current user:', error);\n    return null;\n  }\n}\n\nexport async function POST(\n  request: NextRequest,\n  { params }: { params: Promise<{ id: string }> }\n) {\n  try {\n    const user = await getCurrentUser(request);\n    if (!user) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const { id: shiftId } = await params;\n\n    // Check if shift exists\n    const shift = await prisma.shift.findUnique({\n      where: { id: shiftId },\n      include: {\n        timesheets: true,\n        assignedPersonnel: {\n          include: {\n            user: true\n          }\n        }\n      }\n    });\n\n    if (!shift) {\n      return NextResponse.json({ error: 'Shift not found' }, { status: 404 });\n    }\n\n    // Safely check assigned personnel\n    const assignedPersonnel = shift.assignedPersonnel || [];\n    \n    // Check if all workers have ended their shifts\n    const activeWorkers = assignedPersonnel.filter(assignment => {\n      // Skip if no userId or is placeholder\n      if (!assignment.userId || assignment.isPlaceholder) {\n        return false;\n      }\n\n      const isShiftEnded = assignment.status === 'shift_ended' || \n                          assignment.status === 'Shift Ended' || \n                          assignment.status === 'ShiftEnded' ||\n                          assignment.status === 'SHIFT_ENDED';\n      \n      const isNoShow = assignment.status === 'NoShow' || \n                      assignment.status === 'no_show' || \n                      assignment.status === 'NO_SHOW';\n      \n      return !isShiftEnded && !isNoShow;\n    });\n\n    if (activeWorkers.length > 0) {\n      return NextResponse.json({ \n        error: `Cannot finalize timesheet. ${activeWorkers.length} workers have not ended their shifts yet.` \n      }, { status: 400 });\n    }\n\n    // Check if timesheet already exists for this shift\n    const existingTimesheet = await prisma.timesheet.findUnique({\n      where: { shiftId: shiftId }\n    });\n\n    let timesheet;\n\n    if (existingTimesheet) {\n      // Update existing timesheet\n      timesheet = await prisma.timesheet.update({\n        where: { id: existingTimesheet.id },\n        data: {\n          status: TIMESHEET_STATUS.PENDING_COMPANY_APPROVAL,\n          submittedBy: user.id,\n          submittedAt: new Date(),\n        },\n      });\n    } else {\n      // Create new timesheet only if one doesn't exist\n      timesheet = await prisma.timesheet.create({\n        data: {\n          shiftId,\n          status: TIMESHEET_STATUS.PENDING_COMPANY_APPROVAL,\n          submittedBy: user.id,\n          submittedAt: new Date(),\n        },\n      });\n    }\n\n    // Update shift status to completed if not already\n    if (shift.status !== 'Completed') {\n      await prisma.shift.update({\n        where: { id: shiftId },\n        data: { status: 'Completed' }\n      });\n    }\n\n    return NextResponse.json({\n      success: true,\n      message: 'Timesheet finalized successfully',\n      timesheetId: timesheet.id,\n      timesheet\n    });\n\n  } catch (error) {\n    console.error('Error finalizing timesheet:', error);\n    \n    // Handle specific Prisma unique constraint error\n    if (error.code === 'P2002') {\n      return NextResponse.json({\n        error: 'A timesheet already exists for this shift. Please refresh the page and try again.',\n      }, { status: 409 });\n    }\n    \n    return NextResponse.json(\n      { error: 'Failed to finalize timesheet' },\n      { status: 500 }\n    );\n  }\n}"
                },
                "codebaseEnabled": true
            },
            "createdAt": 1753818387240,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " Compiling /timesheets/[id]/approve ..."
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " ⨯ ./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  × Unexpected eof"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 146 │     </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 147 │   )"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 148 │ }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╰────"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Caused by:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    Syntax Error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Import trace for requested module:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " ⨯ ./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  × Unexpected eof"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 146 │     </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 147 │   )"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 148 │ }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╰────"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Caused by:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    Syntax Error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Import trace for requested module:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " ⨯ ./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  × Unexpected eof"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 146 │     </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 147 │   )"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 148 │ }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╰────"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Caused by:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    Syntax Error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Import trace for requested module:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " ⨯ ./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  × Unexpected eof"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 146 │     </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 147 │   )"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 148 │ }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╰────"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Caused by:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    Syntax Error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Import trace for requested module:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/shifts/cmdnvamoh005zm0ehxbrb4ass 500 in 16715ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/users?page=1&pageSize=20&fetchAll=true 500 in 16728ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/shifts?date=today 500 in 16279ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /timesheets/cmdoxvjum000tiiz582jjvr66/approve 500 in 16746ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " ⨯ ./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  × Unexpected eof"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 146 │     </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 147 │   )"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 148 │ }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╰────"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Caused by:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    Syntax Error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Import trace for requested module:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " ⨯ ./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  × Unexpected eof"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╭─[C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx:146:1]"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 146 │     </div>"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 147 │   )"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " 148 │ }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "     ╰────"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Caused by:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    Syntax Error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Import trace for requested module:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/components/timesheet-details.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "./src/app/(app)/timesheets/[id]/approve/page.tsx"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/shifts?date=today 500 in 13299ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/auth/session 500 in 9585ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/auth/session 500 in 3425ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /shifts/cmdnvamoh005zm0ehxbrb4ass 500 in 86ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cach"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "e\\webpack\\client-development-fallback\\0.pack.gz_' -> 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cache\\webpack\\client-development-fallback\\0.pack.gz'               "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "<w> [webpack.cache.PackFileCacheStrategy] Caching failed for pack: Error: ENOENT: no such file or directory, rename 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cach"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "e\\webpack\\client-development-fallback\\0.pack.gz_' -> 'C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\.next\\cache\\webpack\\client-development-fallback\\0.pack.gz'               "
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " POST /api/auth/_log 500 in 90ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " POST /api/auth/_log 500 in 89ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph"
                    }
                ]
            },
            "autoAppliedRules": [
                {
                    "name": "Repository Information Overview",
                    "description": "Repository Information Overview",
                    "uri": "zen-rules://repo/repo",
                    "content": "\n\n# Holitime App Information\n\n## Summary\nA Next.js application for time tracking and workforce management, named \"Holitime\". The app provides functionality for managing jobs, shifts, timesheets, and worker assignments with role-based access control.\n\n## Structure\n- **src/**: Main application code (components, hooks, features, app routes)\n- **prisma/**: Database schema and migrations using Prisma ORM\n- **public/**: Static assets and files\n- **tests/**: Test files for database, UI, and end-to-end testing\n- **scripts/**: Utility scripts for deployment, database operations, and maintenance\n\n## Language & Runtime\n**Language**: TypeScript/JavaScript\n**Version**: ES2017 target with Next.js 14\n**Build System**: Next.js build system\n**Package Manager**: npm\n\n## Dependencies\n**Main Dependencies**:\n- Next.js (14.2.30) - React framework\n- React (18.3.1) - UI library\n- Prisma (5.17.0) - ORM for PostgreSQL\n- NextAuth (4.24.7) - Authentication\n- TanStack Query (5.51.15) - Data fetching\n- Mantine (7.11.1) & Radix UI - UI components\n- Tailwind CSS (3.4.7) - Styling\n- Zod (3.23.8) - Schema validation\n- Zustand (4.5.4) - State management\n\n**Development Dependencies**:\n- TypeScript (5.5.4)\n- Jest (30.0.5) - Testing\n- ESLint (8.57.0) - Linting\n- Testing Library - Test utilities\n- Faker - Test data generation\n\n## Build & Installation\n```bash\n# Install dependencies\nnpm install\n\n# Development\nnpm run dev\n\n# Build for production\nnpm run build\n\n# Start production server\nnpm run start\n\n# Database operations\nnpm run migrate       # Development migrations\nnpm run migrate:prod  # Production migrations\nnpm run db:seed       # Seed database\nnpm run studio        # Prisma Studio UI\n```\n\n## Docker\n**Dockerfile**: Multi-stage build process\n**Base Image**: node:20-slim\n**Build Process**:\n1. Builder stage installs dependencies and builds the application\n2. Runtime stage copies only necessary files for production\n**Run Command**: `node server.js`\n\n## Testing\n**Framework**: Jest with Testing Library\n**Test Location**: `/tests` directory\n**Configuration**: jest.config.js and jest.setup.js\n**Test Types**:\n- Database tests: `npm run test:db`\n- UI functionality: `npm run test:ui`\n- End-to-end tests: `npm run test:e2e`\n- All tests: `npm run test:all`\n\n## Database\n**ORM**: Prisma\n**Database**: PostgreSQL\n**Schema**: Comprehensive data model for users, companies, jobs, shifts, timesheets\n**Models**: User, Company, Job, Shift, AssignedPersonnel, TimeEntry, Timesheet"
                }
            ]
        },
        {
            "id": "065103d4-b642-4088-a326-66836013d877",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "I can see there's a syntax error in the `timesheet-details.tsx` file. The error message indicates an \"Unexpected eof\" (end of file) at line 146, which suggests the file might be missing some closing brackets, parentheses, or other syntax elements.\n\nLet me examine the file to identify and fix the syntax issue:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_016QQcRtvPZkVw6upavGNCnQ",
                    "statusText": "Viewed file",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "src/components/timesheet-details.tsx",
                                "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "I can see the issue! The file starts with a backtick (`) on line 1 instead of a proper import statement. This is causing the syntax error. Let me fix this:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01K3RC2WdextQtgeK1YLo7MK",
                    "statusText": "Change generated",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "src/components/timesheet-details.tsx",
                                "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\components\\timesheet-details.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "codeHunk",
                    "lineBasedDiff": "--- C:/Users/ryley/WebstormProjects/untitled/my-next-app/src/components/timesheet-details.tsx\n+++ C:/Users/ryley/WebstormProjects/untitled/my-next-app/src/components/timesheet-details.tsx\n@@ -1,4 +1,4 @@\n-`import React from 'react'\n+import React from 'react'\n import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\n import { Badge } from '@/components/ui/badge'\n import { Calendar, MapPin, Building, Users, Clock } from 'lucide-react'",
                    "refToolCallId": "toolu_01K3RC2WdextQtgeK1YLo7MK"
                },
                {
                    "type": "text",
                    "text": "Perfect! I've fixed the syntax error in the `timesheet-details.tsx` file. The issue was that the first line had an errant backtick (`) at the beginning of the import statement, which was causing the \"Unexpected eof\" syntax error.\n\nThe fix was simple:\n- **Before**: `` `import React from 'react' ``\n- **After**: `import React from 'react'`\n\nThis should resolve the compilation error you were seeing. The file should now compile correctly and the timesheet approval page should work properly. You can test this by navigating to the timesheet approval page again - the syntax error should be gone and the page should load without issues."
                },
                {
                    "type": "codePatch",
                    "diffs": [
                        {
                            "path": "src/components/timesheet-details.tsx",
                            "patch": "@@ -1,5 +1,4 @@\n-%60\n impo\n",
                            "isNew": false,
                            "isApplied": true
                        }
                    ]
                }
            ],
            "context": {
                "author": "Coding Agent",
                "operationId": "2839b24d-79bf-4724-b344-b7022c3510a0"
            },
            "createdAt": 1753818629394,
            "isInternal": false
        },
        {
            "id": "53eda12f-07c6-422f-82e0-36a63a5a1448",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "GET /api/timesheets/cmdoxvjum000tiiz582jjvr66 500 in 2675ms"
                },
                {
                    "type": "text",
                    "text": "prisma:error"
                },
                {
                    "type": "text",
                    "text": "Invalid `prisma.timesheet.findUnique()` invocation:"
                },
                {
                    "type": "text",
                    "text": "{"
                },
                {
                    "type": "text",
                    "text": "  where: {"
                },
                {
                    "type": "text",
                    "text": "    id: \"cmdoxvjum000tiiz582jjvr66\""
                },
                {
                    "type": "text",
                    "text": "  },"
                },
                {
                    "type": "text",
                    "text": "  include: {"
                },
                {
                    "type": "text",
                    "text": "    shift: {"
                },
                {
                    "type": "text",
                    "text": "      include: {"
                },
                {
                    "type": "text",
                    "text": "        job: {"
                },
                {
                    "type": "text",
                    "text": "          include: {"
                },
                {
                    "type": "text",
                    "text": "            company: true"
                },
                {
                    "type": "text",
                    "text": "          }"
                },
                {
                    "type": "text",
                    "text": "        },"
                },
                {
                    "type": "text",
                    "text": "        assignedPersonnel: {"
                },
                {
                    "type": "text",
                    "text": "          include: {"
                },
                {
                    "type": "text",
                    "text": "            user: true,"
                },
                {
                    "type": "text",
                    "text": "            timeEntries: {"
                },
                {
                    "type": "text",
                    "text": "              where: {"
                },
                {
                    "type": "text",
                    "text": "                timesheetId: \"cmdoxvjum000tiiz582jjvr66\","
                },
                {
                    "type": "text",
                    "text": "                ~~~~~~~~~~~"
                },
                {
                    "type": "text",
                    "text": "?               AND?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                },
                {
                    "type": "text",
                    "text": "?               OR?: TimeEntryWhereInput[],"
                },
                {
                    "type": "text",
                    "text": "?               NOT?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                },
                {
                    "type": "text",
                    "text": "?               id?: StringFilter | String,"
                },
                {
                    "type": "text",
                    "text": "?               assignedPersonnelId?: StringFilter | String,"
                },
                {
                    "type": "text",
                    "text": "?               clockIn?: DateTimeFilter | DateTime,"
                },
                {
                    "type": "text",
                    "text": "?               clockOut?: DateTimeNullableFilter | DateTime | Null,"
                },
                {
                    "type": "text",
                    "text": "?               breakStart?: DateTimeNullableFilter | DateTime | Null,"
                },
                {
                    "type": "text",
                    "text": "?               breakEnd?: DateTimeNullableFilter | DateTime | Null,"
                },
                {
                    "type": "text",
                    "text": "?               notes?: StringNullableFilter | String | Null,"
                },
                {
                    "type": "text",
                    "text": "?               verified?: BoolFilter | Boolean,"
                },
                {
                    "type": "text",
                    "text": "?               entryNumber?: IntFilter | Int,"
                },
                {
                    "type": "text",
                    "text": "?               isActive?: BoolFilter | Boolean,"
                },
                {
                    "type": "text",
                    "text": "?               createdAt?: DateTimeFilter | DateTime,"
                },
                {
                    "type": "text",
                    "text": "?               updatedAt?: DateTimeFilter | DateTime,"
                },
                {
                    "type": "text",
                    "text": "?               assignedPersonnel?: AssignedPersonnelRelationFilter | AssignedPersonnelWhereInput"
                },
                {
                    "type": "text",
                    "text": "              }"
                },
                {
                    "type": "text",
                    "text": "            }"
                },
                {
                    "type": "text",
                    "text": "          }"
                },
                {
                    "type": "text",
                    "text": "        }"
                },
                {
                    "type": "text",
                    "text": "      }"
                },
                {
                    "type": "text",
                    "text": "    }"
                },
                {
                    "type": "text",
                    "text": "  }"
                },
                {
                    "type": "text",
                    "text": "}"
                },
                {
                    "type": "text",
                    "text": "Unknown argument `timesheetId`. Available options are marked with ?."
                },
                {
                    "type": "text",
                    "text": "Error getting timesheet: PrismaClientValidationError:"
                },
                {
                    "type": "text",
                    "text": "Invalid `prisma.timesheet.findUnique()` invocation:"
                },
                {
                    "type": "text",
                    "text": "{"
                },
                {
                    "type": "text",
                    "text": "  where: {"
                },
                {
                    "type": "text",
                    "text": "    id: \"cmdoxvjum000tiiz582jjvr66\""
                },
                {
                    "type": "text",
                    "text": "  },"
                },
                {
                    "type": "text",
                    "text": "  include: {"
                },
                {
                    "type": "text",
                    "text": "    shift: {"
                },
                {
                    "type": "text",
                    "text": "      include: {"
                },
                {
                    "type": "text",
                    "text": "        job: {"
                },
                {
                    "type": "text",
                    "text": "          include: {"
                },
                {
                    "type": "text",
                    "text": "            company: true"
                },
                {
                    "type": "text",
                    "text": "          }"
                },
                {
                    "type": "text",
                    "text": "        },"
                },
                {
                    "type": "text",
                    "text": "        assignedPersonnel: {"
                },
                {
                    "type": "text",
                    "text": "          include: {"
                },
                {
                    "type": "text",
                    "text": "            user: true,"
                },
                {
                    "type": "text",
                    "text": "            timeEntries: {"
                },
                {
                    "type": "text",
                    "text": "              where: {"
                },
                {
                    "type": "text",
                    "text": "                timesheetId: \"cmdoxvjum000tiiz582jjvr66\","
                },
                {
                    "type": "text",
                    "text": "                ~~~~~~~~~~~"
                },
                {
                    "type": "text",
                    "text": "?               AND?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                },
                {
                    "type": "text",
                    "text": "?               OR?: TimeEntryWhereInput[],"
                },
                {
                    "type": "text",
                    "text": "?               NOT?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                },
                {
                    "type": "text",
                    "text": "?               id?: StringFilter | String,"
                },
                {
                    "type": "text",
                    "text": "?               assignedPersonnelId?: StringFilter | String,"
                },
                {
                    "type": "text",
                    "text": "?               clockIn?: DateTimeFilter | DateTime,"
                },
                {
                    "type": "text",
                    "text": "?               clockOut?: DateTimeNullableFilter | DateTime | Null,"
                },
                {
                    "type": "text",
                    "text": "?               breakStart?: DateTimeNullableFilter | DateTime | Null,"
                },
                {
                    "type": "text",
                    "text": "?               breakEnd?: DateTimeNullableFilter | DateTime | Null,"
                },
                {
                    "type": "text",
                    "text": "?               notes?: StringNullableFilter | String | Null,"
                },
                {
                    "type": "text",
                    "text": "?               verified?: BoolFilter | Boolean,"
                },
                {
                    "type": "text",
                    "text": "?               entryNumber?: IntFilter | Int,"
                },
                {
                    "type": "text",
                    "text": "?               isActive?: BoolFilter | Boolean,"
                },
                {
                    "type": "text",
                    "text": "?               createdAt?: DateTimeFilter | DateTime,"
                },
                {
                    "type": "text",
                    "text": "?               updatedAt?: DateTimeFilter | DateTime,"
                },
                {
                    "type": "text",
                    "text": "?               assignedPersonnel?: AssignedPersonnelRelationFilter | AssignedPersonnelWhereInput"
                },
                {
                    "type": "text",
                    "text": "              }"
                },
                {
                    "type": "text",
                    "text": "            }"
                },
                {
                    "type": "text",
                    "text": "          }"
                },
                {
                    "type": "text",
                    "text": "        }"
                },
                {
                    "type": "text",
                    "text": "      }"
                },
                {
                    "type": "text",
                    "text": "    }"
                },
                {
                    "type": "text",
                    "text": "  }"
                },
                {
                    "type": "text",
                    "text": "}"
                },
                {
                    "type": "text",
                    "text": "Unknown argument `timesheetId`. Available options are marked with ?."
                }
            ],
            "context": {
                "currentFile": {
                    "path": "src\\app\\(app)\\timesheets\\[id]\\approve\\page.tsx",
                    "fsPath": "C:\\Users\\ryley\\WebstormProjects\\untitled\\my-next-app\\src\\app\\(app)\\timesheets\\[id]\\approve\\page.tsx",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "\"use client\"\n\nimport React, { useState, useEffect } from 'react'\nimport { useParams, useRouter } from 'next/navigation'\nimport { useUser } from '@/hooks/use-user'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Label } from '@/components/ui/label'\nimport { useToast } from '@/hooks/use-toast'\nimport { ArrowLeft, FileSignature, Download, Eye, Shield, CheckCircle, XCircle } from 'lucide-react'\nimport SignatureCaptureModal from '@/components/signature-capture-modal'\nimport { TimesheetDetails } from '@/components/timesheet-details'\nimport { UserRole } from '@prisma/client'\n\nexport default function TimesheetApprovePage() {\n  const params = useParams()\n  const router = useRouter()\n  const { user } = useUser()\n  const { toast } = useToast()\n\n  // Get the ID from params (no need for use() hook)\n  const id = params.id as string\n\n  const [timesheet, setTimesheet] = useState<any>(null)\n  const [loading, setLoading] = useState(true)\n  const [showSignatureModal, setShowSignatureModal] = useState(false)\n  const [notes, setNotes] = useState('')\n  const [submitting, setSubmitting] = useState(false)\n  const [approvalType, setApprovalType] = useState<'client' | 'manager' | null>(null)\n\n  useEffect(() => {\n    if (id) {\n      fetchTimesheet()\n    }\n  }, [id])\n\n  const fetchTimesheet = async () => {\n    try {\n      const response = await fetch(`/api/timesheets/${id}`)\n      if (response.ok) {\n        const data = await response.json()\n        setTimesheet(data)\n      } else {\n        throw new Error('Failed to fetch timesheet')\n      }\n    } catch (error) {\n      console.error('Error fetching timesheet:', error)\n      toast({\n        title: \"Error\",\n        description: \"Failed to load timesheet\",\n        variant: \"destructive\",\n      })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const canApproveAsClient = () => {\n    if (!user || !timesheet) return false\n    \n    const isAdmin = user.role === UserRole.Admin\n    const isCompanyUser = user.role === UserRole.CompanyUser && user.companyId === timesheet.shift?.job?.companyId\n    const isAssignedCrewChief = user.role === UserRole.CrewChief && timesheet.shift?.crewChiefId === user.id\n    \n    return timesheet.status === 'PENDING_COMPANY_APPROVAL' && (isAdmin || isCompanyUser || isAssignedCrewChief)\n  }\n\n  const canApproveAsManager = () => {\n    return user?.role === UserRole.Admin && timesheet?.status === 'PENDING_MANAGER_APPROVAL'\n  }\n\n  const handleClientApprove = () => {\n    setApprovalType('client')\n    setShowSignatureModal(true)\n  }\n\n  const handleManagerApprove = () => {\n    setApprovalType('manager')\n    setShowSignatureModal(true)\n  }\n\n  const handleReject = async () => {\n    if (!notes.trim()) {\n      toast({\n        title: 'Error',\n        description: 'Please provide a reason for rejection',\n        variant: 'destructive'\n      })\n      return\n    }\n\n    setSubmitting(true)\n    try {\n      const response = await fetch(`/api/timesheets/${id}/reject`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          reason: notes.trim(),\n          rejectedBy: user?.id\n        })\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Failed to reject timesheet')\n      }\n\n      toast({\n        title: 'Success',\n        description: 'Timesheet has been rejected'\n      })\n\n      await fetchTimesheet()\n\n    } catch (error) {\n      console.error('Error rejecting timesheet:', error)\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to reject timesheet',\n        variant: 'destructive'\n      })\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  const handleSignatureSubmit = async (signatureData: string) => {\n    setSubmitting(true)\n    try {\n      const response = await fetch(`/api/timesheets/${id}/approve`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          signature: signatureData,\n          approvalType: approvalType,\n          notes: notes.trim() || undefined\n        })\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n        throw new Error(error.error || 'Failed to approve timesheet')\n      }\n\n      const result = await response.json()\n      \n      toast({\n        title: 'Success',\n        description: result.message\n      })\n\n      setShowSignatureModal(false)\n      await fetchTimesheet()\n\n    } catch (error) {\n      console.error('Error approving timesheet:', error)\n      toast({\n        title: 'Error',\n        description: error instanceof Error ? error.message : 'Failed to approve timesheet',\n        variant: 'destructive'\n      })\n    } finally {\n      setSubmitting(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"animate-pulse space-y-6\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/3\"></div>\n          <div className=\"h-64 bg-gray-200 rounded\"></div>\n        </div>\n      </div>\n    )\n  }\n\n  if (!timesheet) {\n    return (\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold mb-4\">Timesheet not found</h1>\n          <Button onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Go Back\n          </Button>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto px-4 py-8 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center gap-4\">\n          <Button variant=\"ghost\" onClick={() => router.back()}>\n            <ArrowLeft className=\"h-4 w-4 mr-2\" />\n            Back\n          </Button>\n          <h1 className=\"text-2xl font-bold\">Timesheet Approval</h1>\n        </div>\n        <Badge variant=\"outline\" className=\"text-sm\">\n          {timesheet.status?.replace('_', ' ').toUpperCase()}\n        </Badge>\n      </div>\n\n      <TimesheetDetails timesheet={timesheet} />\n\n      {/* Download options */}\n      {(timesheet.unsigned_pdf_url || timesheet.signed_pdf_url) && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Download className=\"h-5 w-5\" />\n              Download Options\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"flex gap-4\">\n            {timesheet.unsigned_pdf_url && (\n              <Button variant=\"outline\" asChild>\n                <a href={timesheet.unsigned_pdf_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Eye className=\"h-4 w-4 mr-2\" />\n                  View Unsigned PDF\n                </a>\n              </Button>\n            )}\n            {timesheet.signed_pdf_url && (\n              <Button variant=\"outline\" asChild>\n                <a href={timesheet.signed_pdf_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <Eye className=\"h-4 w-4 mr-2\" />\n                  View Signed PDF\n                </a>\n              </Button>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Client approval section */}\n      {canApproveAsClient() && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <FileSignature className=\"h-5 w-5\" />\n              Client Approval\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"notes\">Notes (Optional)</Label>\n              <Textarea\n                id=\"notes\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Add any notes or comments about this timesheet...\"\n                rows={3}\n              />\n            </div>\n            \n            <div className=\"flex justify-end\">\n              <Button \n                onClick={handleClientApprove}\n                disabled={submitting}\n                size=\"lg\"\n              >\n                <FileSignature className=\"h-4 w-4 mr-2\" />\n                Approve & Sign Timesheet\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Manager approval section */}\n      {canApproveAsManager() && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Shield className=\"h-5 w-5\" />\n              Final Manager Approval\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"notes\">Notes</Label>\n              <Textarea\n                id=\"notes\"\n                value={notes}\n                onChange={(e) => setNotes(e.target.value)}\n                placeholder=\"Add approval notes or rejection reason...\"\n                rows={3}\n              />\n            </div>\n            \n            <div className=\"flex justify-end gap-4\">\n              <Button \n                variant=\"destructive\"\n                onClick={handleReject}\n                disabled={submitting}\n              >\n                <XCircle className=\"h-4 w-4 mr-2\" />\n                Reject\n              </Button>\n              <Button \n                onClick={handleManagerApprove}\n                disabled={submitting}\n                size=\"lg\"\n              >\n                <CheckCircle className=\"h-4 w-4 mr-2\" />\n                Final Approve & Sign\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Show approval status if already processed */}\n      {timesheet.status !== 'PENDING_COMPANY_APPROVAL' && timesheet.status !== 'PENDING_MANAGER_APPROVAL' && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Approval Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {timesheet.company_approved_at && (\n                <p className=\"text-sm text-green-600\">\n                  ✓ Client approved on {new Date(timesheet.company_approved_at).toLocaleString()}\n                </p>\n              )}\n              {timesheet.manager_approved_at && (\n                <p className=\"text-sm text-green-600\">\n                  ✓ Final approval on {new Date(timesheet.manager_approved_at).toLocaleString()}\n                </p>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      <SignatureCaptureModal\n        isOpen={showSignatureModal}\n        onClose={() => setShowSignatureModal(false)}\n        onSignatureSubmit={handleSignatureSubmit}\n        title={approvalType === 'client' ? \"Client Approval Signature\" : \"Manager Final Approval\"}\n        description={approvalType === 'client' \n          ? \"Please sign below to approve this timesheet. Your signature confirms that the hours and information are accurate.\"\n          : \"Please sign below to provide final approval for this timesheet.\"\n        }\n        loading={submitting}\n      />\n    </div>\n  )\n}"
                },
                "codebaseEnabled": true
            },
            "createdAt": 1753818832637,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": " GET /api/timesheets/cmdoxvjum000tiiz582jjvr66 500 in 2675ms"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "prisma:error"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Invalid `prisma.timesheet.findUnique()` invocation:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "{"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  where: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    id: \"cmdoxvjum000tiiz582jjvr66\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    shift: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "      include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        job: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            company: true"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        assignedPersonnel: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            user: true,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            timeEntries: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "              where: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "                timesheetId: \"cmdoxvjum000tiiz582jjvr66\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "                ~~~~~~~~~~~"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               AND?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               OR?: TimeEntryWhereInput[],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               NOT?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               id?: StringFilter | String,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               assignedPersonnelId?: StringFilter | String,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               clockIn?: DateTimeFilter | DateTime,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               clockOut?: DateTimeNullableFilter | DateTime | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               breakStart?: DateTimeNullableFilter | DateTime | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               breakEnd?: DateTimeNullableFilter | DateTime | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               notes?: StringNullableFilter | String | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               verified?: BoolFilter | Boolean,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               entryNumber?: IntFilter | Int,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               isActive?: BoolFilter | Boolean,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               createdAt?: DateTimeFilter | DateTime,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               updatedAt?: DateTimeFilter | DateTime,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               assignedPersonnel?: AssignedPersonnelRelationFilter | AssignedPersonnelWhereInput"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "              }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unknown argument `timesheetId`. Available options are marked with ?."
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Error getting timesheet: PrismaClientValidationError:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Invalid `prisma.timesheet.findUnique()` invocation:"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "{"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  where: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    id: \"cmdoxvjum000tiiz582jjvr66\""
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    shift: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "      include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        job: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            company: true"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        },"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        assignedPersonnel: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          include: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            user: true,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            timeEntries: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "              where: {"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "                timesheetId: \"cmdoxvjum000tiiz582jjvr66\","
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "                ~~~~~~~~~~~"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               AND?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               OR?: TimeEntryWhereInput[],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               NOT?: TimeEntryWhereInput | TimeEntryWhereInput[],"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               id?: StringFilter | String,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               assignedPersonnelId?: StringFilter | String,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               clockIn?: DateTimeFilter | DateTime,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               clockOut?: DateTimeNullableFilter | DateTime | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               breakStart?: DateTimeNullableFilter | DateTime | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               breakEnd?: DateTimeNullableFilter | DateTime | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               notes?: StringNullableFilter | String | Null,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               verified?: BoolFilter | Boolean,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               entryNumber?: IntFilter | Int,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               isActive?: BoolFilter | Boolean,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               createdAt?: DateTimeFilter | DateTime,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               updatedAt?: DateTimeFilter | DateTime,"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "?               assignedPersonnel?: AssignedPersonnelRelationFilter | AssignedPersonnelWhereInput"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "              }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "            }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "          }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "        }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "      }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "    }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "  }"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "}"
                            }
                        ]
                    },
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "Unknown argument `timesheetId`. Available options are marked with ?."
                            }
                        ]
                    }
                ]
            },
            "autoAppliedRules": [
                {
                    "name": "Repository Information Overview",
                    "description": "Repository Information Overview",
                    "uri": "zen-rules://repo/repo",
                    "content": "\n\n# Holitime App Information\n\n## Summary\nA Next.js application for time tracking and workforce management, named \"Holitime\". The app provides functionality for managing jobs, shifts, timesheets, and worker assignments with role-based access control.\n\n## Structure\n- **src/**: Main application code (components, hooks, features, app routes)\n- **prisma/**: Database schema and migrations using Prisma ORM\n- **public/**: Static assets and files\n- **tests/**: Test files for database, UI, and end-to-end testing\n- **scripts/**: Utility scripts for deployment, database operations, and maintenance\n\n## Language & Runtime\n**Language**: TypeScript/JavaScript\n**Version**: ES2017 target with Next.js 14\n**Build System**: Next.js build system\n**Package Manager**: npm\n\n## Dependencies\n**Main Dependencies**:\n- Next.js (14.2.30) - React framework\n- React (18.3.1) - UI library\n- Prisma (5.17.0) - ORM for PostgreSQL\n- NextAuth (4.24.7) - Authentication\n- TanStack Query (5.51.15) - Data fetching\n- Mantine (7.11.1) & Radix UI - UI components\n- Tailwind CSS (3.4.7) - Styling\n- Zod (3.23.8) - Schema validation\n- Zustand (4.5.4) - State management\n\n**Development Dependencies**:\n- TypeScript (5.5.4)\n- Jest (30.0.5) - Testing\n- ESLint (8.57.0) - Linting\n- Testing Library - Test utilities\n- Faker - Test data generation\n\n## Build & Installation\n```bash\n# Install dependencies\nnpm install\n\n# Development\nnpm run dev\n\n# Build for production\nnpm run build\n\n# Start production server\nnpm run start\n\n# Database operations\nnpm run migrate       # Development migrations\nnpm run migrate:prod  # Production migrations\nnpm run db:seed       # Seed database\nnpm run studio        # Prisma Studio UI\n```\n\n## Docker\n**Dockerfile**: Multi-stage build process\n**Base Image**: node:20-slim\n**Build Process**:\n1. Builder stage installs dependencies and builds the application\n2. Runtime stage copies only necessary files for production\n**Run Command**: `node server.js`\n\n## Testing\n**Framework**: Jest with Testing Library\n**Test Location**: `/tests` directory\n**Configuration**: jest.config.js and jest.setup.js\n**Test Types**:\n- Database tests: `npm run test:db`\n- UI functionality: `npm run test:ui`\n- End-to-end tests: `npm run test:e2e`\n- All tests: `npm run test:all`\n\n## Database\n**ORM**: Prisma\n**Database**: PostgreSQL\n**Schema**: Comprehensive data model for users, companies, jobs, shifts, timesheets\n**Models**: User, Company, Job, Shift, AssignedPersonnel, TimeEntry, Timesheet"
                }
            ]
        }
    ],
    "isAgent": true,
    "isNameGenerated": true,
    "isCustomAgent": false,
    "isUnitTestsAgent": false,
    "isE2EAgent": false,
    "isQnaAgent": false,
    "isRepoInfoAgent": false,
    "autoApply": true
}
}